22.02.23.17회차
===============================================================================
*사용자 계정을 관리(post,get,delete)하는 restAPI 간단실습(JSON, jackson, postman)
===============================================================================







##############################################################################
62)restController 환경구축 및 맛보기


#pom.xml
<!-- 데이터를 JSON형태로 파싱해주는 라이브러리 -->
		<dependency>
		    <groupId>com.fasterxml.jackson.core</groupId>
		    <artifactId>jackson-databind</artifactId>
		    <version>2.9.8</version>
		</dependency>	

package com.spring.mvc.test;
RestControllerTest
Person
	private String name;
	private Integer age;
	private List<String> hobbys;


1)위까지만든후 controller에서 리턴했을때 그게 뷰리절버로 보내는게 아닌 클라이언트에 바로 응답하도록해라
	-Person 객체를 넘겨주었을때 JSON 방식으로 데이터가 어덯게 클라이언트에게 응답되는지 확인해라
		

2)@RestController // 스프링 4 이상부터 사용가능(3버전에선 사용불가) 이거 해바라
	f3하고 내부에 뭔갈보고 필요없는거 주석처리

##############################################################################


답:













##############################################################################
63)RestAPI 구축(벡엔드서버) 및 post man 클라이언트를 이용한 JSON방식 통신 테스트1



1)DB설계
mvc_user.sql 생성후 아래 복사 붙여넣기 후 mysql에서 생성


CREATE TABLE mvc_user (
	account VARCHAR(80) PRIMARY KEY,
	password VARCHAR(80) NOT NULL,
	name VARCHAR(100) NOT NULL,
	reg_date TIMESTAMP DEFAULT NOW()
);



2)구조설계 및 메소드 생성
com.spring.mvc.user.model.UserVO
com.spring.mvc.user.repository.IUserMapper
	-회원가입 기능
		void register(UserVO user);
	-IUserMapper interface 만든후 빈등록 

UserMapper.xml생성
	-<!--  회원가입 SQL --> 작성

com.spring.mvc.board.test.UserMapperTest 생성

com.spring.mvc.user.service.IUserService 생성
com.spring.mvc.user.service.UserService 생성

com.spring.mvc.user.controller.UserController 생성
	@PostMapping("/")
	public String register(UserVO user) {
		System.out.println("/user : POST");
		System.out.println("param : " + user);
		return "joinSuccess";
	}

3)post man을 이용하여 클라이언트 상황조성 후 register 메소드 이용하여 db에 데이터넣기
구글 크롬, post man 설치, workspaces, +클릭, POST, url 입력, Body, raw, JSON(text로 되어있는걸 JSON으로)

{
    "account" : "zzz4321", 
    "password" : "xxx4321!",
    "name" : "박삐비"
}

서버키고 http://localhost/user/ 날리면 회원가입이 되는가 확인
	-user뒤에 /안하면 안보내짐
	-이대로보내면 null값이 보내진다.
		-register에 관련된 url처리도 controller에서 했는데 왜 null 값이 보내졌는가?
			-사실 UserVO user 처럼 커맨드객체로 받을수 있는것은 클라이언트에서 폼객체로
				input등을 통해 보낸거만 커맨드로 받을 수 있는 것이었다!!
				그래서 아래와같이 해당 커맨드객체는 폼으로 받는것이 아니라 Request BODY에 담긴 것을 받는 방식의
				커맨드객체라는 것을 알려줘야함/ 폼이아닌 요청바디 
					-request body가 보내는방식인데 이게 포스트맨에서 선택했다 우리가

	@PostMapping("/")
	public String register(@RequestBody UserVO user) {
		System.out.println("/user : POST");
		System.out.println("param : " + user);
		return "joinSuccess";
	}



##############################################################################


답:






##############################################################################
64)RestAPI 구축(벡엔드서버) 및 post man 클라이언트를 이용한 JSON방식 통신 테스트2

1)삭제기능 
// 회원 탈퇴 기능
	void delete(String account);

1-1)abc1234 계정을 탈퇴(삭제)시켜라
	-UserMapperTest.java에서 삭제시키고 registerTest()를 돌려서 다시 넣어라
1-2)post man에서 삭제시켜라
	http://localhost/user/abc1234 (delete로 변경해야하고 내부 body 기존내용 삭제해라)
	http://localhost/user/zzz4321 이거도 삭제해라


2)회원정보 조회기능
	-우선 db에 레코드가 하나도 없으니 값들넣어라(post man 이용해서해라)
		-post -> http://localhost/user
		{
    			"account" : "abc1234",
    			"password" : "aaa1234!",
    			"name" : "홍길동"
		}
		{
    			"account" : "zzz1234",
    			"password" : "aaa1234!",
    			"name" : "박영희"
		}


2-1)회원정보 1개 조회기능
	http://localhost/user/abc1234
// 회원 정보 조회기능
	UserVO selectOne(String account);

<!--  DB컬럼명과 VO클래스의 필드가 다름으로 ResultMap세팅해야함 -->


2-2)전체 회원정보 조회기능
	http://localhost/user/
// 회원 정보 전체조회 기능
	UserVO selectAll(String account);
##############################################################################


답:






##############################################################################
65)





##############################################################################


답:



