21.02.09.6회차
===============================================================================
*복습
===============================================================================



##############################################################################
30)MVC패턴으로 점수등록, 점수확인, 삭제, 개별조회
	-MVC패턴  흐름 (Controller -> Service -> Repository(DAO) -> DB)
		-각각 의존성이다. Controller는 service가 있어야하고 등등
	


1)학생들의 점수를 등록하고 삭제할수있으며 list.jsp 출력하였을때 전체학생의 점수를 볼수있도록 mvc 패턴으로 웹어플리케이션을 만드시오.
	-각 클래스 이름에 맞는 아노테이션 사용하여 디스패쳐가 자동빈등록할수 있도록 하고 
		차후 스캔해서 singleton형식의 객체들을 사용한다.(autowired)

	
<controller>
ScoreController.java

<model>
ScoreVO.java

<repository> : (DAO)
IScoreDAO.java // interface
ScoreDAO.java
	-현재 db가 없으니 scoreList라는 list 변수 만들어서 사용
	-삭제시 deleteScore()를 사용하라
<service>
IScoreService.java
ScoreService.java

<views/score>
write-form.jsp
write-result.jsp
list.jsp
	-학번만 list.jsp에서 생성하여 넣어라.
		-학번을 jstl이용해서 변수 stuNum만들고 1번부터 한놈당 부여. 전체 리스트 조회할때 한놈나올때마다 제일앞에
				-이때 인덱스는 0부터 나오니 1더해야함
<IScoreDAO, IScoreService 메소드>
		// 매개변수의 ?는 공백일수도, 존재할수도 있다.
	//점수 등록 기능 
	void insertScore(?);
	
	//점수 전체 조회 기능
	List<ScoreVO> selectAllScores(?);
	
	//점수 삭제기능
	void deleteScore(?); // stuNum을 사용
	
<write-form.jsp 출력화면>
시험 점수 등록
# 이름 : 
	
# 국어 : 

# 영어 : 

# 수학 : 

확인

<write-result.jsp 출력화면>
점수 등록 성공!
다른 점수 등록하기 점수 전체 조회 점수 개별 조회(이놈은 이문제에서 만드는게 아니니까 uri #으로 해놔라)


<최종결과> : list.jsp페이지 출력화면
학생들의 전체 성적 조회
# 학번 : 1, 이름 : 박여으히, 국어 : 50, 영어 : 39, 수학 : 99, 총점 : 188, 평균 : 62.67   [삭제]

# 학번 : 2, 이름 : 김철수, 국어 : 55, 영어 : 99, 수학 : 23, 총점 : 177, 평균 : 59.0   [삭제]

다른 점수 등록하기

<위의 김철수의 삭제 클릭시 최종결과> : 삭제 완료하면 아래 결과에다가 위에 팝업을 js로 띄워서 점수 삭제 완료! 
				라고 표시해라. f12하면 나오는곳의 console에는 delSuccess가 뜨게하라
					-중간에 만들어야할 변수 이름들은 자유롭게
학생들의 전체 성적 조회
# 학번 : 1, 이름 : 박여으히, 국어 : 50, 영어 : 39, 수학 : 99, 총점 : 188, 평균 : 62.67   [삭제]

다른 점수 등록하기









2)위의 상황에서 개별점수 조회기능이 돌아가도록 mvc패턴에 입각하여 앱을 설계하라
-/selectOne 요청을 통해 해당 학번을 가진 학생의 성적정보를 조회하여 search-result.jsp에서 해당 정보를
	화면에 출력하세요.
	-아래 제공된 search.jsp를 이용하시오
		-조회할 학번에 존재하지 않는 학번입력시 아래에 학번정보가 없습니다. 라고 빨간글씨띄워라
-기존 service, dao의 메서드에서 추가로 더 만들어야함
	-이름은 자유롭게 혹은 selectOneScore(?)
-아래 메세지가 출력될 상황이 나면 search.jsp에서 조회할 학번 아래에 빨간글자로 아래 메세지를 출력하라.
	-없는 학번을 입력할시 : 학번정보가 없습니다.
	-숫자가아닌 문자를 입력할시 : 숫자로만 입력하세요!


#search.jsp 

<%@ page language="java" contentType="text/html; charset=UTF-8"
    pageEncoding="UTF-8"%>
<!DOCTYPE html>
<html>
<head>
<meta charset="UTF-8">
<title>Insert title here</title>
</head>
<body>
<h2>개별 점수 조회</h2>
<form action = "/web/score/selectOne">
	<p>
		#조회할 학번 : <input type = "text" name = "stuNum" size = "5">
				   <input type = "submit" value = "조회">
	</p>
</form>

</body>
</html>
package com.spring.web.controller;

import java.util.List;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Controller;
import org.springframework.ui.Model;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.servlet.mvc.support.RedirectAttributes;

import com.spring.web.model.ScoreVO;
import com.spring.web.service.IScoreService;

@Controller
@RequestMapping("/score")
public class ScoreController {
	@Autowired
	private IScoreService service;
	
	@RequestMapping(value = "/register", method = RequestMethod.GET)
	public String score() {
		return "score/write-form";
	}
	
	@RequestMapping(value = "/register", method = RequestMethod.POST)
	public String score(ScoreVO score) {
		score.setData();
		service.insertScore(score);
		return "score/write-result";
	}
	
	@RequestMapping(value = "/list", method = RequestMethod.GET)
	public void list(Model model) {
		List<ScoreVO> list = service.selectAllScores();
		model.addAttribute("list", list);
	}
	
	@RequestMapping(value = "/delete", method = RequestMethod.GET)
	public String delete(int stuNum) {
		service.deleteScore(stuNum);
		return "redirect:/score/list";
	}
	
	@RequestMapping(value = "/selectOne", method = RequestMethod.GET)
	public String selectOneScore() {
		System.out.println("/selectOne 요청됨 : GET");
		System.out.println("왜 안열리지?");
		return "score/search";
	}
	
	@RequestMapping(value = "/selectOne", method = RequestMethod.POST)
	public String selectOneScore(String stuNum, Model model, 
									RedirectAttributes ra) {
		List<ScoreVO> list = service.selectAllScores();
		System.out.println("/selectOne 요청됨 : POST");
		
		try {
			int num = Integer.parseInt(stuNum);
			if (num > list.size()) {
				ra.addFlashAttribute("message", "학번정보가 없습니다.");
				return "redirect:/score/selectOne";
			}
			
			ScoreVO stu = service.selectOneScore(num);
			model.addAttribute("stu", stu);
			return "score/select-result";
		} catch(NumberFormatException e) {
			ra.addFlashAttribute("message", "숫자로만 입력하세요!");
			return "redirect:/score/selectOne";
		}
	}
}
package com.spring.web.model;

public class ScoreVO {
	private String stuName;
	private Integer kor;
	private Integer eng;
	private Integer math;
	private Integer total;
	private Double average;
	
	
	public ScoreVO() {
		// TODO Auto-generated constructor stub
	}


	public void setData() {
		this.total = kor + eng + math;
		this.average = Math.round(total / 3.0 * 100) / 100.0;
	}
	
	public String getStuName() {
		return stuName;
	}

	
	public void setStuName(String stuName) {
		this.stuName = stuName;
	}


	public Integer getKor() {
		return kor;
	}


	public void setKor(Integer kor) {
		this.kor = kor;
	}


	public Integer getEng() {
		return eng;
	}


	public void setEng(Integer eng) {
		this.eng = eng;
	}


	public Integer getMath() {
		return math;
	}


	public void setMath(Integer math) {
		this.math = math;
	}


	public Integer getTotal() {
		return total;
	}


	public void setTotal(Integer total) {
		this.total = total;
	}


	public Double getAverage() {
		return average;
	}


	public void setAverage(Double average) {
		this.average = average;
	}
	
	
	
}package com.spring.web.service;

import java.util.List;

import com.spring.web.model.ScoreVO;

public interface IScoreService {
	//점수 등록 기능 
	void insertScore(ScoreVO score);
	
	//점수 전체 조회 기능
	List<ScoreVO> selectAllScores();
	
	//점수 삭제기능
	void deleteScore(int stuNum); // stuNum을 사용
	
	ScoreVO selectOneScore(int stuNum);
}
package com.spring.web.service;

import java.util.List;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Service;

import com.spring.web.model.ScoreVO;
import com.spring.web.repository.IScoreDAO;

@Service
public class ScoreService implements IScoreService {
	@Autowired
	private IScoreDAO dao;
	
	@Override
	public void insertScore(ScoreVO score) {
		// TODO Auto-generated method stub
		dao.insertScore(score);
	}

	@Override
	public List<ScoreVO> selectAllScores() {
		// TODO Auto-generated method stub
		return dao.selectAllScores();
	}

	@Override
	public void deleteScore(int stuNum) {
		// TODO Auto-generated method stub
		dao.deleteScore(stuNum);
	}
	
	
	public ScoreVO selectOneScore(int stuNum) {
		return dao.selectOneScore(stuNum);
	}
}
package com.spring.web.repository;

import java.util.List;

import com.spring.web.model.ScoreVO;

public interface IScoreDAO {
	//점수 등록 기능 
		void insertScore(ScoreVO score);
		
		//점수 전체 조회 기능
		List<ScoreVO> selectAllScores();
		
		//점수 삭제기능
		void deleteScore(int stuNum); // stuNum을 사용
		
		ScoreVO selectOneScore(int stuNum);
}
package com.spring.web.repository;

import java.util.ArrayList;
import java.util.List;

import org.springframework.stereotype.Repository;

import com.spring.web.model.ScoreVO;

@Repository
public class ScoreDAO implements IScoreDAO {
	private List<ScoreVO> list = new ArrayList<>();
	
	@Override
	public void insertScore(ScoreVO score) {
		// TODO Auto-generated method stub
		list.add(score);
	}

	@Override
	public List<ScoreVO> selectAllScores() {
		// TODO Auto-generated method stub
		return list;
	}

	@Override
	public void deleteScore(int stuNum) {
		// TODO Auto-generated method stub
		list.remove(stuNum - 1);
	}

	public ScoreVO selectOneScore(int stuNum) {
		return list.get(stuNum - 1);
	}
}
<%@ page language="java" contentType="text/html; charset=UTF-8"
    pageEncoding="UTF-8"%>
<!DOCTYPE html>
<html>
<head>
<meta charset="UTF-8">
<title>Insert title here</title>
</head>
<body>

<h2>시험 점수 등록</h2>

<form method = "post">
	<p>
		# 이름 : <input type = "text" name = "stuName"> <br>
		# 국어 : <input type = "text" name = "kor"> <br>
		# 영어 : <input type = "text" name = "eng"> <br>
		# 수학 : <input type = "text" name = "math"> <br>	
		<input type = "submit" value = "확인">
	</p>
</form>


</body>
</html>

<%@ page language="java" contentType="text/html; charset=UTF-8"
    pageEncoding="UTF-8"%>
<!DOCTYPE html>
<html>
<head>
<meta charset="UTF-8">
<title>Insert title here</title>
</head>
<body>
<h2>점수 등록 성공!</h2>

	<a href = "/web/score/register">다른 점수 등록하기</a>
	<a href = "/web/score/list">점수 전체 조회</a>
	<a href = "/web/score/selectOne">점수 개별 조회</a>

</body>
</html>

<%@ page language="java" contentType="text/html; charset=UTF-8"
    pageEncoding="UTF-8"%>
<%@ taglib prefix = "c" uri = "http://java.sun.com/jsp/jstl/core" %>

<!DOCTYPE html>
<html>
<head>
<meta charset="UTF-8">
<title>Insert title here</title>
</head>
<body>
<h2>학생들의 전체 성적 조회</h2>

<c:forEach var = "stu" items = "${list}" varStatus = "stuNum">
	<p>
		# 학번 : ${stuNum.index + 1}, 이름 : ${stu.stuName}, 국어 : ${stu.kor}, 
		 영어 : ${stu.eng}, 수학 : ${stu.math}, 총점 : ${stu.total}, 
		 평균 : ${stu.average}
		&nbsp;
		<a href = "/web/score/delete?stuNum=${stuNum.index + 1}">[삭제]</a>
	</p>
</c:forEach>

	<a href = "/web/score/register">다른 점수 등록하기</a>
	<a href = "/web/score/list">점수 전체 조회</a>
	<a href = "/web/score/selectOne">점수 개별 조회</a>


</body>
</html>



<%@ page language="java" contentType="text/html; charset=UTF-8"
    pageEncoding="UTF-8"%>
<!DOCTYPE html>
<html>
<head>
<meta charset="UTF-8">
<title>Insert title here</title>
</head>
<body>
<h2>개별 점수 조회</h2>
<form action = "/web/score/selectOne" method = "post">
	<p>
		#조회할 학번 : <input type = "text" name = "stuNum" size = "5">
				   <input type = "submit" value = "조회">
	</p>
</form>

<p style = "color:red;"> ${message} </p>

</body>
</html>


<%@ page language="java" contentType="text/html; charset=UTF-8"
    pageEncoding="UTF-8"%>
<!DOCTYPE html>
<html>
<head>
<meta charset="UTF-8">
<title>Insert title here</title>
</head>
<body>
<h2>${stu.stuName}학생 성적 정보 조회</h2>

<p>	
	# 국어 : ${stu.kor} <br>
	# 영어 : ${stu.eng} <br>
	# 수학 : ${stu.math} <br>
	# 총점 : ${stu.total} <br>
	# 평균 : ${stu.average} 
</p>

<a href = "/web/score/register">다른 점수 등록하기</a> 
<a href = "/web/score/list">점수 전체 조회</a>
<a href = "/web/score/selectOne">점수 개별 조회</a>

</body>
</html>
##############################################################################



답:

---------------------------------------

<controller>
ScoreController.java

package com.spring.web.controller;

import java.util.List;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Controller;
import org.springframework.ui.Model;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.servlet.mvc.support.RedirectAttributes;

import com.spring.web.model.ScoreVO;
import com.spring.web.service.IScoreService;

@Controller
@RequestMapping("/score")
public class ScoreController {
	@Autowired
	private IScoreService service;
	
	//점수 등록 화면을 열어주는 처리를 하는 요청메서드
	@GetMapping("/register")
	public String register() {
		System.out.println("/score/register: GET");
		return "score/write-form";
	}
	
	//점수 등록을 처리하는 요청 메서드
	@PostMapping("/register")
	public String register(ScoreVO scores) {
		System.out.println("/score/register: POST");
		System.out.println("Controller param: " + scores);
		
		service.insertScore(scores);
		return "score/write-result";
	}
	
	//점수 전체 조회를 처리하는 요청 메서드
	@GetMapping("/list")
	public void list(Model model) {
		System.out.println("/score/list: GET");
		List<ScoreVO> list = service.selectAllScores();
		model.addAttribute("sList", list);
		
	}
	
	//점수 삭제 요청 처리 메서드
	@GetMapping("/delete")
	public String delete(@RequestParam("stuNum") int stuNum, RedirectAttributes ra) {
		List<ScoreVO> list = service.selectAllScores();
		service.deleteScore(stuNum);
		ra.addFlashAttribute("message", "delSuccess");
		return "redirect:/score/list";
	}
	
	//점수 개별 조회 화면 열람요청 메서드
	@GetMapping("/search")
	public void search() {
		System.out.println("/score/search: GET");
		
	}
	
	@PostMapping("/selectOne")
	public String selectOne(String stuNum, Model model, RedirectAttributes ra) {
		
		/*
		try {
			ScoreVO stu = service.selectOneScore(Integer.parseInt(stuNum));			
			model.addAttribute("stu", stu);
			return "/score/select-result";
		} catch(NumberFormatException e) {
			ra.addFlashAttribute("message", "숫자로만 입력하세요!");
			return "redirect:/score/search"; 
		} catch(IndexOutOfBoundsException e) {
			ra.addFlashAttribute("message", "학번정보가 없습니다.");
			return "redirect:/score/search";
		} 
		*/
		List<ScoreVO> list = service.selectAllScores();
		
		try {
			int n = Integer.parseInt(stuNum);
			if (n > list.size()) {
				ra.addFlashAttribute("message", "학번정보가 없습니다.");
				return "redirect:/score/search";
			}
			
			ScoreVO stu = service.selectOneScore(n);			
			model.addAttribute("stu", stu);
			return "score/select-result";
		} catch(NumberFormatException e) {
			ra.addFlashAttribute("message", "숫자로만 입력하세요!");
			return "redirect:/score/search"; 
		} 
	}
}




---------------------------------------


<model>
ScoreVO.java


package com.spring.web.model;

public class ScoreVO {
	private String stuName;
	private Integer kor;
	private Integer eng;
	private Integer math;
	private Integer total;
	private Double average;
	
	
	public ScoreVO() {
		// TODO Auto-generated constructor stub
	}
	
	
	//총점 평균을 구하는 메서드
	public void calcData() {
		this.total = this.kor + this.eng + this.math;
		this.average = Math.round((this.total / 3.0) * 100) / 100.0;
		
	}
	
	public String getStuName() {
		return stuName;
	}
	public void setStuName(String stuName) {
		this.stuName = stuName;
	}
	public Integer getKor() {
		return kor;
	}
	public void setKor(Integer kor) {
		this.kor = kor;
	}
	public Integer getEng() {
		return eng;
	}
	public void setEng(Integer eng) {
		this.eng = eng;
	}
	public Integer getMath() {
		return math;
	}
	public void setMath(Integer math) {
		this.math = math;
	}
	public Integer getTotal() {
		return total;
	}
	public void setTotal(Integer total) {
		this.total = total;
	}
	public Double getAverage() {
		return average;
	}
	public void setAverage(Double average) {
		this.average = average;
	}


	@Override
	public String toString() {
		return "ScoreVO [stuName=" + stuName + ", kor=" + kor + ", eng=" + eng + ", math=" + math + ", total=" + total
				+ ", average=" + average + "]";
	}
	
	
	
	
}


---------------------------------------



<repository> : (DAO)

#IScoreDAO.java // interface

package com.spring.web.repository;

import java.util.List;

import com.spring.web.model.ScoreVO;

public interface IScoreDAO {
	//점수 등록 기능
	void insertScore(ScoreVO scores);
	
	//점수 전체 조회 기능
	List<ScoreVO> selectAllScores();
	
	//점수 삭제기능
	void deleteScore(int stuNum);
	
	ScoreVO selectOneScore(int stuNum);
}




#ScoreDAO.java
	-현재 db가 없으니 scoreList라는 list 변수 만들어서 사용
	-삭제시 deleteScore()를 사용하라


package com.spring.web.repository;

import java.util.ArrayList;
import java.util.List;

import org.springframework.stereotype.Repository;
import org.springframework.web.servlet.mvc.support.RedirectAttributes;

import com.spring.web.model.ScoreVO;

@Repository
public class ScoreDAO implements IScoreDAO {
	//학생들의 점수정보를 저장할 리스트 생성(DB대용)_ DB대용 : scoreList
	private List<ScoreVO> scoreList = new ArrayList<>();
	
	@Override
	public void insertScore(ScoreVO scores) {
		// TODO Auto-generated method stub
		System.out.println("Repository param: " + scores);
		scoreList.add(scores);
	}

	@Override
	public List<ScoreVO> selectAllScores() {
		// TODO Auto-generated method stub
		return scoreList;
	}

	@Override
	public void deleteScore(int stuNum) {
		// TODO Auto-generated method stub
		scoreList.remove(stuNum - 1);
	}

	public ScoreVO selectOneScore(int stuNum) {
		return scoreList.get(stuNum - 1);
	}
}


---------------------------------------




<service>
#IScoreService.java

package com.spring.web.service;

import java.util.List;

import com.spring.web.model.ScoreVO;

public interface IScoreService {
	//점수 등록 기능
	void insertScore(ScoreVO scores);
	
	//점수 전체 조회 기능
	List<ScoreVO> selectAllScores();
	
	//점수 삭제기능
	void deleteScore(int stuNum);
	
	ScoreVO selectOneScore(int stuNum);
	
}





#ScoreService.java

package com.spring.web.service;

import java.util.List;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Service;

import com.spring.web.model.ScoreVO;
import com.spring.web.repository.IScoreDAO;


@Service
public class ScoreService implements IScoreService {

	@Autowired
	private IScoreDAO dao;
	
	@Override
	public void insertScore(ScoreVO scores) {
		// TODO Auto-generated method stub
		scores.calcData();
		dao.insertScore(scores);
	}

	@Override
	public List<ScoreVO> selectAllScores() {
		// TODO Auto-generated method stub
		return dao.selectAllScores();
	}

	@Override
	public void deleteScore(int stuNum) {
		// TODO Auto-generated method stub
		dao.deleteScore(stuNum);
	}
	
	public ScoreVO selectOneScore(int stuNum) {
		return dao.selectOneScore(stuNum);
	}

}


---------------------------------------




<views/score>
#write-form.jsp


<%@ page language="java" contentType="text/html; charset=UTF-8"
    pageEncoding="UTF-8"%>
<!DOCTYPE html>
<html>
<head>
<meta charset="UTF-8">
<title>Insert title here</title>
</head>
<body>

<h2>시험 점수 등록</h2>
<form method = "post">
	<p>
		# 이름 : <input type = "text" name = "stuName"><br>
		# 국어 : <input type = "text" name = "kor"><br>
		# 영어 : <input type = "text" name = "eng"><br>
		# 수학 : <input type = "text" name = "math"><br>
		<input type = "submit" value = "확인">
	</p>
</form>

</body>
</html>



#write-result.jsp

<%@ page language="java" contentType="text/html; charset=UTF-8"
    pageEncoding="UTF-8"%>
<!DOCTYPE html>
<html>
<head>
<meta charset="UTF-8">
<title>Insert title here</title>
</head>
<body>
	<h2>점수 등록 성공!</h2>
	<a href = "/web/score/register">다른 점수 등록하기</a>
	<a href = "/web/score/list">점수 전체 조회</a>
	<a href = "/web/score/search">점수 개별 조회</a>

</body>
</html>


#list.jsp

<%@ page language="java" contentType="text/html; charset=UTF-8"
    pageEncoding="UTF-8"%>
<%@ taglib prefix = "c" uri = "http://java.sun.com/jsp/jstl/core" %>    
    
<!DOCTYPE html>
<html>
<head>
<meta charset="UTF-8">
<title>Insert title here</title>
</head>
<body>
<h2>학생들의 전체  성적 조회</h2>
<c:forEach var = "stu" items = "${sList}" varStatus = "stuNum">
	<p>
		# 학번 : ${stuNum.index + 1}, 이름 : ${stu.stuName}, 국어 : ${stu.kor}, 영어 : ${stu.eng},
		 수학 : ${stu.math}, 총점 : ${stu.total}, 평균 : ${stu.average}
		&nbsp;
		<a href = "/web/score/delete?stuNum=${stuNum.index + 1}">[삭제]</a>	
	</p>
</c:forEach>

<a href = "/web/score/register">다른 점수 등록하기</a> 
<a href = "/web/score/list">점수 전체 조회</a>
<a href = "/web/score/search">점수 개별 조회</a>

<script type = "text/javascript">
	const msg = "${message}";
	console.log(msg);
	if (msg === "delSuccess") {
		alert("점수 삭제 완료!");
	}
</script>


</body>
</html>




#search.jsp


<%@ page language="java" contentType="text/html; charset=UTF-8"
    pageEncoding="UTF-8"%>
<!DOCTYPE html>
<html>
<head>
<meta charset="UTF-8">
<title>Insert title here</title>
</head>
<body>
<h2>개별 점수 조회</h2>
<form action = "/web/score/selectOne" method = "post">
	<p>
		#조회할 학번 : <input type = "text" name = "stuNum" size = "5">
				   <input type = "submit" value = "조회">
	</p>
</form>

<p style = "color:red;">
	${message}
</p>

</body>
</html>



#select-result.jsp




<%@ page language="java" contentType="text/html; charset=UTF-8"
    pageEncoding="UTF-8"%>
<!DOCTYPE html>
<html>
<head>
<meta charset="UTF-8">
<title>Insert title here</title>
</head>
<body>
<h2>${stu.stuName}학생 성적 정보 조회</h2>

<p>	
	# 국어 : ${stu.kor} <br>
	# 영어 : ${stu.eng} <br>
	# 수학 : ${stu.math} <br>
	# 총점 : ${stu.total} <br>
	# 평균 : ${stu.average} 
</p>

<a href = "/web/score/register">다른 점수 등록하기</a> 
<a href = "/web/score/list">점수 전체 조회</a>
<a href = "/web/score/search">점수 개별 조회</a>

</body>
</html>
