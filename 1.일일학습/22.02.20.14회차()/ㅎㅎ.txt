22.02.20.14회차
===============================================================================
*
===============================================================================







##############################################################################
52)페이징 처리 알고리즘 개념정리 및 실습

클래스생성
package com.spring.mvc.board.test.PagingAlgorithmTest;


SELECT COUNT(*)
FROM mvc_board;

package com.spring.mvc.board.test;

import org.junit.Test;
import org.junit.runner.RunWith;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.test.context.ContextConfiguration;
import org.springframework.test.context.junit4.SpringJUnit4ClassRunner;

import com.spring.mvc.board.repository.IBoardMapper;
import com.spring.mvc.commons.PageVO;

@RunWith(SpringJUnit4ClassRunner.class)
@ContextConfiguration(locations = {"file:src/main/webapp/WEB-INF/spring/mvc-config.xml"})

public class PagingAlgorithmTest {
	/*
	 	# 페이징 알고리즘 만들기
	 	* 사용자가 보게 될 페이지 화면
	  		-한 화면에 페이지를 10개식 끊어서 보여준다면?
	  		ex)1 2 3 4 ... 9 10 [다음] // [이전] 31 32 33 ... 39 40[다음]
	  		
	  			-만약에 총 게시물의 수가 67개라면? 이전, 다음버튼 두개다 없어야함
	  			ex) 1 2 3 4 5 6 7
	  		
	  			-총 게시물 수가 142개이고 현재 12페이지에 사용자가 머물러 있다면? 다음은 없다
	  			ex) [이전] 11 12 13 14 15
	  	
	  	* 위 화면을 구성하는 알고리즘 방법
	  	1. 우선 총 게시물의 수를 조회해야한다.
	  		-총 게시물 수는 DB로부터 수를 조회하는 SQL을 작성
	  	2. 사용자가 현재 위치한 페이지를 기준으로 
	  	끝 페이지 번호를 계산하는 로직 작성
	  		ex)만약 현재 사용자가 보고 있는 페이지가 3페이지고 한 화면에 보여줄 페이지가 10페이지씩이라면
	  			-> 끝페이지 번호는? 10page
	  		      만약 현재 페이지가 37페이지고 한 화면에 보여줄 페이지가 20페이지식이라면 
	  		   	-> 끝페이지 번호는 ?? 40page
	  		   
	  		-끝페이지번호공식: 
	  			Math.ceil(현재위치한 페이지번호 / 한 화면당 보여질 페이지의 수) * 한 화면당 보여질 페이지수
	  			Math.ceil :올림함수
	  	
	   3.시작페이지 번호 계산하기
	   		-현재 위치한 페이지가 15페이지이고, 한 화면에 보여줄 페이지가 10페이지씩이라면??
	   			-> 시작페이지번호는? 11페이지
	   		-현재 위치한 페이지가 73페이지이고, 한 화면에 보여줄 페이지가 20페이지씩이라면??
	   			-> 시작페이지번호는? 61페이지
	   		-공식:
	   			(끝페이지 번호 - 한 화면에 보여줄 페이지의 수) + 1;
	   4. 끝 페이지  보정
	   		- 총 게시물 수가 324개이고 한 페이지당 10개의 게시물을 보여준다
	   		- 그리고 현재 이사람은 31페이지를 보고 있다.
	   		- 그리고 한 화면당 10개씩의 페이지를 보여준다.
	   		- 그렇다면 위 공식에 의한 끝페이지는 어덯게 계산되는가?
				-> 40page
			- 하지만 실제 끝페이지는 몇번이어야 하는가?? 33페이지 
			
			4-1. 이전버튼 활성 여부 설정
				-시작페이지가 1인 화면을 제외한 모든 화면에서 이전이 있어야함
				-공식: 시작페이지 번호가 1로 구해진 시점에서 비활성처리. 나머지는 활성
			4-2. 다음버튼 활성 여부 설정
				-언제 다음버튼을 비활성화 할 것인가??
					-공식:
						보정전 끝페이지번호 x 한 페이지에 들어갈 게시물 수 >= 총게시물수 -> 비활성
						
			4-3. 끝페이지 값 보정
			-다음 버튼이 비활성화 되었을때 총 게시물수에 맞춰 끝페이지 번호를 재보정한다.
			-공식: Math.ceil(총게시물의 수 / 한 페이지에 보여줄 게시물 수)
			
			 
	 */
	
	@Autowired
	private IBoardMapper mapper;
	
	@Test
	public void pagingAlgolithmTest() {
		// 1.총 게시물 수 구하는 테스트
		System.out.println("=============================");
		System.out.println(" # 총 게시물 수 : " + mapper.countArticles());
		System.out.println("=============================");
		
		
		// 2.끝페이지 번호 계산 테스트
		PageVO paging = new PageVO();
		
		paging.setPage(32);
		paging.setCountPerPage(10); // 기본값이 10 되어있어서 사실 setter 안넣어줘도됨
		int displayPage = 20;
		
		int endPage = (int) (Math.ceil(paging.getPage() / (double) displayPage)) * displayPage;
//		System.out.println(Math.ceil(30.0)); // 끝자리가 0 즉 0으로 나누어떨어진 경우엔 올림하지않는다.
		System.out.println("끝페이지지 번호: " + endPage); // 90 나와야함
		
		// 3.시작페이지 번호 계산 테스트
		int beginPage = (endPage - displayPage) + 1;
		
		
		System.out.println("시작페이지 번호 : " + beginPage);
		
		boolean isPrev = (beginPage == 1) ? false : true;
		// 도대체 왜 위에처럼 굳이 삼항쓰는거지
		System.out.println("이전버튼 활성화 여부 : " + isPrev); 
//		System.out.println("isperv : " + !(beginPage == 1));
//		System.out.println("isperv : " + (beginPage != 1));
		
		
		boolean isNext = (mapper.countArticles() <= (endPage * paging.getCountPerPage())) ? false : true;
		
		System.out.println("다음버튼 활성화 여부 : " + isNext);
		
		
		// 끝페이지 보정
		if (!isNext) {
			endPage = (int) Math.ceil(mapper.countArticles() / (double) paging.getCountPerPage());
		}
		
		System.out.println("보정 후 끝페이지 번호 : " + endPage);
		System.out.println("=============================");
		
		
	}
}

##############################################################################



답: 실습해봐라





























##############################################################################
53)페이징 알고리즘을 위한 클래스작성
	-toString도 넣어라

package com.spring.mvc.commons;

public class PageCreator {
	//페이지 번호와 한 페이지당 들어갈 게시물 수를 갖고 있는 객체
	private PageVO paging;
	private Integer articleTotalCount; // 게시판의 총 게시물 수
	
	private Integer beginPage; // 시작페이지번호
	private Integer endPage; // 끝페이지번호
	private boolean prev; // 이전버튼 활성화 여부
	private boolean next; // 다음버튼 활성화 여부
	
	//한 화면에 보여질 페이지 수
	private final Integer displayPageNum = 10;

	//페이징 알고리즘을 수행할 메서드 선언
	private void calcDataOfPage() {
		// 보정 전 끝 페이지 구하기
		
		
		// 시작 페이지 번호 구하기
		
		// 현재 시작 페이지가 1이라면 이전 버튼 활성화 여부를 false로 지정
		
		// 마지막 페이지인지 여부 확인 후 다음 버튼 비활성
		
		// 재보정 여부 판단하기
		
		// 끝 페이지 재보정하기
	}
	
	public PageVO getPaging() {
		return paging;
	}

	public void setPaging(PageVO paging) {
		this.paging = paging;
	}

	public Integer getArticleTotalCount() {
		return articleTotalCount;
	}

	public void setArticleTotalCount(Integer articleTotalCount) {
		this.articleTotalCount = articleTotalCount;
	}

	public Integer getBeginPage() {
		return beginPage;
	}

	public void setBeginPage(Integer beginPage) {
		this.beginPage = beginPage;
	}

	public Integer getEndPage() {
		return endPage;
	}

	public void setEndPage(Integer endPage) {
		this.endPage = endPage;
	}

	public boolean isPrev() {
		return prev;
	}

	public void setPrev(boolean prev) {
		this.prev = prev;
	}

	public boolean isNext() {
		return next;
	}

	public void setNext(boolean next) {
		this.next = next;
	}

	public Integer getDisplayPageNum() {
		return displayPageNum;
	}
	
	
}

##############################################################################



답:

package com.spring.mvc.commons;

public class PageCreator {
	//페이지 번호와 한 페이지당 들어갈 게시물 수를 갖고 있는 객체
	private PageVO paging;
	private Integer articleTotalCount; // 게시판의 총 게시물 수
	
	private Integer beginPage; // 시작페이지번호
	private Integer endPage; // 끝페이지번호
	private boolean prev; // 이전버튼 활성화 여부
	private boolean next; // 다음버튼 활성화 여부
	
	//한 화면에 보여질 페이지 수
	private final Integer displayPageNum = 10;
	
	
	//페이징 알고리즘을 수행할 메서드 선언
	private void calcDataOfPage() {
		// 보정 전 끝 페이지 구하기
		endPage = (int) Math.ceil(paging.getPage() / (double) displayPageNum) 
				* displayPageNum;
		
		
		// 시작 페이지 번호 구하기
		beginPage = (endPage - displayPageNum) + 1;
		
		
		
		// 현재 시작 페이지가 1이라면 이전 버튼 활성화 여부를 false로 지정
		prev = (beginPage != 1);
		
		// 마지막 페이지인지 여부 확인 후 다음 버튼 비활성
		next = !(articleTotalCount <= (endPage * paging.getCountPerPage()));
		
		// 재보정 여부 판단하기
		if (!next 
				&& articleTotalCount < (endPage * paging.getCountPerPage())) { // 랑 같은말임
			// 끝 페이지 재보정하기
			endPage = (int) Math.ceil(articleTotalCount / (double)paging.getCountPerPage());
		}			
	}
	
	public PageVO getPaging() {
		return paging;
	}

	public void setPaging(PageVO paging) {
		this.paging = paging;
	}

	public Integer getArticleTotalCount() {
		return articleTotalCount;
	}

	public void setArticleTotalCount(Integer articleTotalCount) {
		this.articleTotalCount = articleTotalCount;
		calcDataOfPage();
	}

	public Integer getBeginPage() {
		return beginPage;
	}

	public void setBeginPage(Integer beginPage) {
		this.beginPage = beginPage;
	}

	public Integer getEndPage() {
		return endPage;
	}

	public void setEndPage(Integer endPage) {
		this.endPage = endPage;
	}

	public boolean isPrev() {
		return prev;
	}

	public void setPrev(boolean prev) {
		this.prev = prev;
	}

	public boolean isNext() {
		return next;
	}

	public void setNext(boolean next) {
		this.next = next;
	}

	public Integer getDisplayPageNum() {
		return displayPageNum;
	}

	@Override
	public String toString() {
		return "PageCreator [paging=" + paging + ", articleTotalCount=" + articleTotalCount + ", beginPage=" + beginPage
				+ ", endPage=" + endPage + ", prev=" + prev + ", next=" + next + ", displayPageNum=" + displayPageNum
				+ "]";
	}
	
	
	
}




























##############################################################################
54)페이징알고리즘이 get방식으로 page를 넘겼을때 controller에 잘 넘어와서 원하는 pageCreator 값이 나오는지 콘솔(이클립스)에서 확인하기
	-BoardController.java 만 손보면 됨 앞문제 pageCreator 잘짰으면 집어넣고 로그로직만 넣은채 실행하면됨
		-list.jsp 아직 쓰기 전임
		-setter로 pageCreator 넣어보기도하고 추가 코드를 작성해서 생성자를 통해 한줄로 되게도 해바라

PageVo에 디버깅용으로 toString() 만들어라


URL : /board/list GET -> result : 10
parameter(페이지번호) : 1번
pc : PageCreator [paging=PageVO [page=1, countPerPage=10], articleTotalCount=323, beginPage=1, endPage=10, prev=false, next=true, displayPageNum=10]
URL : /board/list GET -> result : 10
parameter(페이지번호) : 11번
pc : PageCreator [paging=PageVO [page=11, countPerPage=10], articleTotalCount=323, beginPage=11, endPage=20, prev=true, next=true, displayPageNum=10]
URL : /board/list GET -> result : 10
parameter(페이지번호) : 31번
pc : PageCreator [paging=PageVO [page=31, countPerPage=10], articleTotalCount=323, beginPage=31, endPage=33, prev=true, next=false, displayPageNum=10]
URL : /board/list GET -> result : 3
parameter(페이지번호) : 33번
pc : PageCreator [paging=PageVO [page=33, countPerPage=10], articleTotalCount=323, beginPage=31, endPage=33, prev=true, next=false, displayPageNum=10]

##############################################################################



답: 







package com.spring.mvc.board.controller;

import java.util.List;

import javax.inject.Inject;

import org.springframework.stereotype.Controller;
import org.springframework.ui.Model;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.servlet.mvc.support.RedirectAttributes;

import com.spring.mvc.board.model.BoardVO;
import com.spring.mvc.board.service.IBoardService;
import com.spring.mvc.commons.PageCreator;
import com.spring.mvc.commons.PageVO;

@Controller
@RequestMapping("/board")
public class BoardController {
	@Inject
	private IBoardService service;
	
	//게시글 목록 불러오기 요청
	/*
	@GetMapping("/list")
	public void list(Model model) {
		List<BoardVO> list = service.getArticleList();
		System.out.println("URL : /board/list GET -> result : " + list.size());
//		list.forEach(article -> System.out.println(article));
		
		model.addAttribute("articles", list);
//		return "board/list";
	}
	*/
	
	//페이징 처리 이후 게시글 목록 불러오기 요청
	@GetMapping("/list")
	public void list(PageVO paging, Model model) {
		List<BoardVO> list = service.getArticleListPaging(paging);
		
		System.out.println("URL : /board/list GET -> result : " + list.size());
		System.out.println("parameter(페이지번호) : " + paging.getPage() + "번");
//		list.forEach(article -> System.out.println(article));
		
		PageCreator pc = new PageCreator();
		
		pc.setPaging(paging);
		pc.setArticleTotalCount(service.countArticles());
		System.out.println("pc : " + pc);
		
		model.addAttribute("articles", list);
		model.addAttribute("pc", pc);
		
//		return "board/list";
	}
	
	//게시글 작성 페이지 요청
	@GetMapping("/write")
	public void write() {
		System.out.println("URL : /board/write => GET");
	}
	
	//게시글 등록 요청
	@PostMapping("/write")
	public String write(BoardVO article, RedirectAttributes ra) {
		System.out.println("URL : /board/write => POST");
		System.out.println("Controller parameter : " + article);
		service.insert(article);
		ra.addFlashAttribute("msg", "regSuccess");
		
		return "redirect:/board/list";
	}
	
	
	//게시물 상세 조회 요청
	@GetMapping("/content/{boardNo}")
	//public String content(@PathVariable("boardNo") Integer boardNo, Model model) {
							//PathVariable로 경로에서 받은 놈 필드명을 가져오고 그 필드명이
					//Integer boardNo와 같으면 PathVariable뒤에 전달인자를 줄 필요 없다.
	public String content(@PathVariable Integer boardNo, Model model) {
		System.out.println("URL: /board/content => GET");
		BoardVO article = service.getArticle(boardNo);
		System.out.println("result data: " + article);
		model.addAttribute("article", article);
		return "board/content";
	}
	
	//게시물 삭제 요청
	/*
	@GetMapping("/delete")
	public String delete(Integer boardNo, RedirectAttributes ra) {
		service.delete(boardNo);
		ra.addFlashAttribute("msg", "delSuccess");
		return "redirect:/board/list";
	}
	*/
	
	@PostMapping("/delete")
	public String delete(Integer boardNo, RedirectAttributes ra) {
		System.out.println("URL: /board/delete => POST");
		System.out.println("Controller Paramerter : " + boardNo);
		service.delete(boardNo);
		ra.addFlashAttribute("msg", "delSuccess");
		return "redirect:/board/list";
	}
	
	@GetMapping("/modify")
	public String modify(Integer boardNo, Model model) {
		System.out.println("URL: /board/modify => GET");
		System.out.println("Parameter(글 번호) : " + boardNo);
		model.addAttribute("article", service.getArticle(boardNo));
		
		return "board/modify";
	}
	
	//게시물 수정 요청
	@PostMapping("/modify")
	public String modify(BoardVO article, RedirectAttributes ra) {
		System.out.println("URL: /board/modify => POST");
		System.out.println("parameter(게시글): " + article);
		
		service.update(article);
		
		ra.addFlashAttribute("msg", "modSuccess");
		
		return "redirect:/board/content/" + article.getBoardNo();
	}
	
}























##############################################################################
55)페이징알고리즘 한 내용을 list.jsp에 적용하기
	-list.jsp만 만지면 됨
1)페이지버튼, 이전버튼, 다음버튼

2)내가 몇페이지에 있는지 ui로 나타내기(CSS쪽임)
	page-active 속성추가(띄어쓰기하고 넣으면 속성이됨)
	background-color: #ff52a0;
	el에서는 문자열을 홀따옴표로 쓴다는것을 명심하라

3)10, 20, 30을 누르는 순간 1페이지로 돌아가지만 한페이지당 보일 게시글수는 누른 value만큼 다음페이지로 이동할때마다 항상 유지되게해라 
	-20으로 하면 원래 10일때 30정도 페이지까지있던게 17페이지정도로 바뀐다.
##############################################################################



답:

#list.jsp

<%@ page language="java" contentType="text/html; charset=UTF-8"
    pageEncoding="UTF-8"%>
<%@ taglib prefix="c" uri="http://java.sun.com/jsp/jstl/core"%>
<!-- 포매팅 관련 태그라이브러리 -->
<%@ taglib prefix="fmt" uri="http://java.sun.com/jsp/jstl/fmt"%>
<jsp:include page="../include/header.jsp" />
<style>
header.masthead {
	
	display: none;
}	
.btn-orange {
	background-color: orange;
	color: white;
}
.btn-izone {
	background-color: #ff52a0;
	color: white;
}

.page-active {
	background-color: #ff52a0;
}

</style>

<br><br> 
 
    <!-- Begin Page Content -->
	

	<div class="container">
		<div class="row">
			<div class="col-lg-2">
			</div>
			<div class="col-lg-8">
				<div class="panel-body">
				<h2 class="page-header"><span style="color: #ff52a0;">IZONE</span> 자유 게시판
					<span id="count-per-page" style="float: right;">
	                     <input class="btn btn-izone" type="button" value="10">  
	                     <input class="btn btn-izone" type="button" value="20">   
	                     <input class="btn btn-izone" type="button" value="30">
                     </span>
					
				</h2>
					<table class="table table-bordered table-hover">
						<thead>
							<tr style="background-color: #ff52a0; margin-top: 0; height: 40px; color: white; border: 0px solid #f78f24; opacity: 0.8">
								<th>#번호</th>
								<th>작성자</th>
								<th>제목</th>
								<th>작성일</th>
								<th>조회수</th>
							</tr>
						</thead>

						<!-- 게시물이 들어갈 공간 -->
						<c:if test = "${articles.size() <= 0}">
							<h2>게시물이 없습니다.</h2>
						</c:if>
						<c:if test = "${articles.size() > 0}">						
							<c:forEach var = "article" items = "${articles}">
								<tr style="color: #ff52a0;">
									<td>${article.boardNo}</td>
									<td>${article.writer}</td>
	
									<td><a style="margin-top: 0; height: 40px; color: orange;" href="<c:url value = '/board/content/${article.boardNo}'/>">
											${article.title}
										</a>
									</td>
	
									<!-- 이방식은 날짜시간이 드릅게 나온다
									<td>${article.regDate}</td>
									 -->
									<td>
										<fmt:formatDate value="${article.regDate}" pattern = "yyyy년 MM월 dd일 a hh:mm"/>
									</td>
									<td>${article.viewCnt}</td>
								</tr>
							</c:forEach>
						</c:if>
					</table>
					
					<!-- 페이징 처리 부분  -->
					<ul class="pagination justify-content-center">
						<!-- 이전 버튼 -->
						<c:if test = "${pc.prev}">
	                       	<li class="page-item">
								<a class="page-link" href="<c:url value = '/board/list?page=${pc.beginPage - 1}&&countPerPage=${pc.paging.countPerPage}'/>" 
								style="background-color: #ff52a0; margin-top: 0; height: 40px; color: white; border: 0px solid #f78f24; opacity: 0.8">이전</a>
							</li>
						</c:if>
						
						<!-- 페이지 버튼 -->
						<c:forEach var = "pageNum" begin = "${pc.beginPage}" end = "${pc.endPage}">
							<li class="page-item">
							   <a href="<c:url value = '/board/list?page=${pageNum}&&countPerPage=${pc.paging.countPerPage}'/>" class="page-link ${(pc.paging.page == pageNum) ? 'page-active' : ''}" style="margin-top: 0; height: 40px; color: pink; border: 1px solid pink;">${pageNum}</a>
							</li>
					   </c:forEach>
					   <!-- 다음 버튼 -->
					   <c:if test = "${pc.next}">
						    <li class="page-item">
						      <a class="page-link" href="<c:url value = '/board/list?page=${pc.endPage + 1}&&countPerPage=${pc.paging.countPerPage}'/>" 
						      style="background-color: #ff52a0; margin-top: 0; height: 40px; color: white; border: 0px solid #f78f24; opacity: 0.8">다음</a>
						    </li>
					    </c:if>
				    </ul>
					<!-- 페이징 처리 끝 -->
					</div>
				</div>
			</div>
					<!-- 검색 버튼 -->
					<div class="row">
						<div class="col-sm-2"></div>
	                    <div class="form-group col-sm-2">
	                        <select id="condition" class="form-control" name="condition">                            	
	                            <option value="title">제목</option>
	                            <option value="content">내용</option>
	                            <option value="writer">작성자</option>
	                            <option value="titleContent">제목+내용</option>
	                        </select>
	                    </div>
	                    <div class="form-group col-sm-4">
	                        <div class="input-group">
	                            <input type="text" class="form-control" name="keyword" id="keywordInput" placeholder="검색어">
	                            <span class="input-group-btn">
	                                <input type="button" value="검색" class="btn btn-izone btn-flat" id="searchBtn">                                       
	                            </span>
	                        </div>
	                    </div>
	                    <div class="col-sm-2">
							<a href="<c:url value = '/board/write'/>" class="btn btn-izone float-right">글쓰기</a>
						</div>
						<div class="col-sm-2"></div>
					</div>
					
		
	</div>
	
<script type="text/javascript">
	//글쓰기 완료시 띄울 알림창처리
	const result = "${msg}";
	
	if (result === "regSuccess") {
		alert("게시글 등록이 완료되었습니다.");
	} else if (result === "delSuccess") {
		alert("게시글 삭제가 완료되었습니다.");
	}
	
	//start jQuery
	$(function() {
		//목록 개수가 변동하는 이벤트 처리
		$("#count-per-page .btn-izone").click(function() {
			//console.log("목록 버튼이 클릭됨!");
			//console.log($(this).val());
			let count = $(this).val();
			location.href = "/board/list?countPerPage=" + count;
		});
	});
</script>
<jsp:include page="../include/footer.jsp" />











##############################################################################
56)


##############################################################################



답:










